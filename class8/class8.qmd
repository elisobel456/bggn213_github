---
title: "class8"
author: "Eli Sobel A69027989"
format: pdf
---

Side_Note:

```{r}
head(mtcars)
```

Let's look at "spread" via `sd()`

```{r}
apply(mtcars,2, sd)
```

All the signal is goint to come from disp, because it has the largest standard deviation. 


```{r}
pca<-prcomp(mtcars)
biplot(pca)
```

Let's try scaling the data:

```{r}
mtscale <- scale(mtcars)
head(mtscale)
```

What is the mean of each dimension and column of mtscale?

```{r}
round(apply(mtscale, 2, sd), 3)
```

Let's plot `mpg` vs. `disp` for both mtcars and the scaled data in `mtscale`.

```{r}
library(ggplot2)

ggplot(mtcars) +
  aes(mpg,disp) +
  geom_point()
```

```{r}
ggplot(mtscale) +
  aes(mpg,disp) +
  geom_point()
```


```{r}
pca2 <- prcomp(mtscale) 
  biplot(pca2)
```



## Breast cancer

```{r}
fna.data <- read.csv("C:/Users/eliso/Downloads/WisconsinCancer.csv", row.names = 1)
wisc.df <- data.frame(fna.data)
```

```{r}
wisc.data <- wisc.df[,-1]
diagnosis <- factor(wisc.df[,1])
```

## Q1. How many observations are in this dataset?

```{r}
dim(wisc.data)
```
There are 569 observations in this data.

## Q2. How many of the observations have a malignant diagnosis?

```{r}
table(diagnosis)
```
There are 212 malignant diagnoses.


## Q3. How many variables/features in the data are suffixed with _mean?

```{r}
length(grep("_mean", colnames(wisc.data)))
```

Ten variables in the data are suffixed with _mean.

## PCA section

We want to scale our data before PCA by setting the `scale=TRUE` argument.

```{r}
# Check column means and standard deviations
colMeans(wisc.data)

apply(wisc.data,2,sd)
```

```{r}
wisc.pr <- prcomp(wisc.data, scale=TRUE)
```

How much variance captured in each principal component?

```{r}
summary(wisc.pr)
```

## Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

44.27% of the original variance is captured by PC1.

## Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

The first 3 PCs are required to describe at least 70% of the original variance in the data.

## Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

The first 7 PCs are required to describe at least 90% of the original variance in the data.

```{r}
x <- summary(wisc.pr)
x$importance
```

```{r}
plot(x$importance[2,], typ="b")
```

```{r}
biplot(wisc.pr)
```

```{r}
attributes(wisc.pr)
```

```{r}
head(wisc.pr$x)
```

My main PC result figure

```{r}
plot(wisc.pr$x, col=diagnosis)
```

## Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?

```{r}
plot(wisc.pr$x[, c(1,3)], col = diagnosis)
```


```{r}
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

# Load the ggplot2 package
library(ggplot2)

# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col=df$diagnosis) + 
  geom_point()
```


```{r}
pr.var <- wisc.pr$sdev^2
head(pr.var)
```

```{r}
# Variance explained by each principal component: pve
pve <- pr.var / sum(pr.var)

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

```{r}
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```


## Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean? This tells us how much this original feature contributes to the first PC.

By printing the code below, we see that concave.points_mean = -0.26085376.

```{r}
wisc.pr$rotation[,1]
```

## Hierarchical clustering

```{r}
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data)
data.dist <- dist(data.scaled)
wisc.hclust <- hclust(data.dist, method="ward.D2")
```

## Q10. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

As determined below, the height at which the clustering model has 4 clusters is `19`.

```{r}
plot(wisc.hclust)
abline(h=19, col="red", lty=2)
```

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, h=19)
table(wisc.hclust.clusters, diagnosis)
```

## Q11. OPTIONAL: Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10? How do you judge the quality of your result in each case?



## Q12. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

After trying hclust() with each of the four methods, my favorite is ward.D2, because it put our data into two similarly sized groups, which fits what we know about our data by looking at the PCA plot where the points are neatly divided in two by diagnosis.



## Clustering

Try to cluster the `wisc.data`.

```{r}
km <- kmeans(wisc.data, centers = 2)
table(km$cluster)
```
```{r}
d <- dist(wisc.data)
hc <- hclust(d)
plot(hc)
```

```{r}
grps <- cutree(hc, k=3)
table(grps)
```

## Cluster in PC space

In other words, use my PCA results as a basis of clustering.

```{r}
d <- dist(wisc.pr$x[,1:3])
hc <- hclust(d, method="ward.D2")
plot(hc)
```

Cut this tree to yield 2 groups/clusters

```{r}
grps <- cutree(hc, k=2)
table(grps)
```

Compare to my expert M and B `diagnosis`

```{r}
table(diagnosis, grps)
```



```{r}
plot(wisc.pr$x[,1:2], col=grps)
```

```{r}
plot(wisc.pr$x[,1:2], col=diagnosis)
```


```{r}
g <- as.factor(grps)
levels(g)
```

```{r}
g <- relevel(g,2)
levels(g)
```

```{r}
# Plot using our re-ordered factor 
plot(wisc.pr$x[,1:2], col=g)
```


```{r}
## Use the distance along the first 7 PCs for clustering i.e. wisc.pr$x[, 1:7]
wisc.pr.hclust <- hclust(dist(wisc.pr$x[, 1:7]), method="ward.D2")
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=2)
```

```{r}
# Compare to actual diagnoses
table(wisc.pr.hclust.clusters, diagnosis)
```

## Prediction

```{r}
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```

```{r}
plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

## Q16. Which of these new patients should we prioritize for follow up based on your results?

We should prioritize patient 2 for follow-up, since they are clustering with the samples that were diagnosed as malignant.

